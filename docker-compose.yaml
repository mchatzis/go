services:
  postgres:
    image: postgres:latest
    container_name: postgres
    env_file:
      - .env
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./producer/db/sqlc/init-db:/docker-entrypoint-initdb.d
    networks:
      - app-network

  adminer:
    image: adminer
    container_name: adminer
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - app-network

  producer:
    container_name: producer
    build:
      context: ./producer
    env_file:
      - .env
    ports:
      - "8081:8081"
    depends_on:
      - postgres
    networks:
      - app-network
    develop:
      watch:
        - action: rebuild
          path: ./producer

  consumer:
    container_name: consumer
    build:
      context: ./consumer
    env_file:
      - .env
    ports:
      - "8082:8082"
    depends_on:
      - postgres
    networks:
      - app-network

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - app-network

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:

